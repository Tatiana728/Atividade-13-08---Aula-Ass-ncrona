import tkinter as tk
from tkinter import messagebox
import requests
from bs4 import BeautifulSoup
import re
 
def buscar_noticias():
    url = url_entry.get().strip()
    if not url:
        messagebox.showwarning("Entrada vazia", "Por favor, insira a URL do site.")
        return
 
    try:        
        resposta = requests.get(url, timeout=10)
        resposta.raise_for_status()  
    except requests.exceptions.HTTPError as http_err:
        messagebox.showerror("Erro HTTP", f"Erro ao acessar a página: {http_err}")
    except requests.exceptions.ConnectionError:
        messagebox.showerror("Erro de Conexão", "Falha na conexão com o site.")
    except requests.exceptions.Timeout:
        messagebox.showerror("Tempo Limite", "O tempo limite da solicitação foi excedido.")
    except Exception as e:
        messagebox.showerror("Erro Inesperado", f"Ocorreu um erro inesperado: {e}")
        return
 
    try:        
        soup = BeautifulSoup(resposta.text, 'html.parser')
       
        seletores = [
            'h1',  
            'h2',  
            'h3'  
        ]
       
        titulos = []
        for seletor in seletores:
            titulos.extend([tag.get_text(strip=True) for tag in soup.find_all(seletor)])
 
        if not titulos:
            messagebox.showwarning("Sem Notícias", "Nenhuma notícia encontrada na página.")
            return
       
        resultado_texto = '\n'.join(titulos)
        resultado_label.config(text=f"Títulos das Notícias:\n{resultado_texto}")
    except Exception as e:
        messagebox.showerror("Erro de Análise", f"Erro ao analisar o HTML: {e}")
 
root = tk.Tk()
root.title("Raspador de Notícias")
 
tk.Label(root, text="URL do site de notícias:").pack(padx=10, pady=5)
url_entry = tk.Entry(root, width=50)
url_entry.pack(padx=10, pady=5)
 
buscar_button = tk.Button(root, text="Buscar Notícias", command=buscar_noticias)
buscar_button.pack(padx=10, pady=10)
 
resultado_label = tk.Label(root, text="")
resultado_label.pack(padx=10, pady=10)
 
root.mainloop()
 
